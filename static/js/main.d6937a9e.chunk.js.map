{"version":3,"sources":["components/cell/cell.js","components/board/board.js","components/game-logic/game-logic.js","redux/actions.js","chooseWinner.js","App.js","redux/reducer.js","redux/store.js","index.js","components/game-logic/game-logic.module.css","components/board/board.module.css","components/cell/cell.module.css"],"names":["Cell","onClick","value","disable","className","styles","cell","disabled","Board","cells","click","winner","wrapper","map","index","connect","state","board","step","dispatch","resetGame","type","i","payload","status","lines","length","winnerIsX","winnerIs0","console","log","chooseWinner","draw","indexOf","box","descr","btn","App","initialState","Array","fill","gameReducer","boardArray","store","createStore","getState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d6937a9e.chunk.js","sourcesContent":["import styles from \"./cell.module.css\";\r\n\r\nconst Cell = ({ onClick, value, disable }) => {\r\n  return (\r\n    <button className={styles.cell} onClick={onClick} disabled={disable}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import styles from \"./board.module.css\";\r\nimport Cell from \"../cell/cell.js\";\r\n\r\nconst Board = ({ cells, click, winner }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {cells.map((cell, index) => {\r\n        return (\r\n          <Cell\r\n            key={index}\r\n            value={cell}\r\n            onClick={() => click(index)}\r\n            disable={cell || winner ? true : false}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import styles from \"./game-logic.module.css\";\r\nimport Board from \"../board/board\";\r\nimport { chooseWinner } from \"../../chooseWinner\";\r\nimport { showDraw } from \"../../chooseWinner\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\n\r\nconst GameLogic = ({ board, step, resetGame, click }) => {\r\n  const winner = chooseWinner(board);\r\n  const draw = showDraw(board);\r\n\r\n  let status;\r\n  if (winner || draw) {\r\n    status = \"Winner is \" + (winner || draw);\r\n    console.log(status);\r\n  } else {\r\n    status = \"Next player: \" + (step % 2 === 0 ? \"X\" : \"0\");\r\n    console.log(status);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.box}>\r\n        <p className={styles.descr}>{status}</p>\r\n        <button className={styles.btn} onClick={resetGame}>\r\n          Click me\r\n        </button>\r\n      </div>\r\n      <Board cells={board} click={click} winner={winner} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    board: state.board,\r\n    step: state.step,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    resetGame: () => dispatch(actions.reset()),\r\n    click: (i) => dispatch(actions.handleClick(i)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameLogic);\r\n","export const handleClick = (index) => {\r\n  return {\r\n    type: \"handleClickOnCell\",\r\n    payload: index,\r\n  };\r\n};\r\nexport const reset = () => {\r\n  return {\r\n    type: \"resetGame\",\r\n  };\r\n};\r\n","export const chooseWinner = (cells) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const winnerIsX =\r\n      cells[lines[i][0]] === \"x\" &&\r\n      cells[lines[i][1]] === \"x\" &&\r\n      cells[lines[i][2]] === \"x\";\r\n\r\n    const winnerIs0 =\r\n      cells[lines[i][0]] === \"0\" &&\r\n      cells[lines[i][1]] === \"0\" &&\r\n      cells[lines[i][2]] === \"0\";\r\n\r\n    if (winnerIsX) {\r\n      console.log(\"X is winner\");\r\n      return \"X\";\r\n    } else if (winnerIs0) {\r\n      console.log(\"0 is winner\");\r\n      return \"0\";\r\n    }\r\n  }\r\n};\r\n\r\nexport const showDraw = (cells) => {\r\n  if (cells.indexOf(\"\") === -1) {\r\n    console.log(\"draw!!!\");\r\n    return \"D\";\r\n  } else {\r\n    console.log(\"keep playing :)\");\r\n    return undefined;\r\n  }\r\n};\r\n","import GameLogic from \"./components/game-logic/game-logic\";\n\nfunction App() {\n  return <GameLogic />;\n}\n\nexport default App;\n","const initialState = {\r\n  step: 0,\r\n  board: Array(9).fill(\"\"),\r\n};\r\n\r\nfunction gameReducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case \"handleClickOnCell\":\r\n      const boardArray = [...state.board];\r\n      boardArray[payload] = state.step % 2 === 0 ? \"x\" : \"0\";\r\n\r\n      return {\r\n        step: state.step + 1,\r\n        board: boardArray,\r\n      };\r\n\r\n    case \"resetGame\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default gameReducer;\r\n","import { createStore } from \"redux\";\r\nimport gameReducer from \"./reducer\";\r\n\r\nconst store = createStore(gameReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconsole.log(store);\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"game-logic_box__3O4Zb\",\"descr\":\"game-logic_descr__kB4Ey\",\"text\":\"game-logic_text__1Ubvo\",\"btn\":\"game-logic_btn__TVzvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"board_wrapper__2uTZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"cell_cell__3yzxJ\"};"],"sourceRoot":""}